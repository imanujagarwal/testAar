package com.moat.analytics.mobile.kiip;

import android.app.Application;
import android.content.Context;
import android.support.annotation.Nullable;
import android.support.annotation.UiThread;
import java.lang.ref.WeakReference;











final class j
  extends MoatAnalytics
  implements t.a
{
  boolean ॱ = false;
  boolean ˎ = false;
  boolean ˏ = false;
  private boolean ᐝ = false;
  private String ʼ;
  @Nullable
  b ˊ;
  WeakReference<Context> ˋ;
  private MoatOptions ˊॱ;
  
  j() {}
  
  public final void start(MoatOptions paramMoatOptions, Application paramApplication) {
    try { Application localApplication = paramApplication;paramApplication = paramMoatOptions;
      
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      paramMoatOptions = this; if (ᐝ) {
        b.ˏ(3, "Analytics", paramMoatOptions, "Moat SDK has already been started.");
        return;
      }
      ˊॱ = paramApplication;
      t.ˋ().ˏ();
      ˏ = disableLocationServices;
      if (localApplication == null) {
        throw new o("Moat Analytics SDK didn't start, application was null");
      }
      if ((loggingEnabled) && (p.ˎ(localApplication.getApplicationContext()))) {
        ॱ = true;
      }
      ˋ = new WeakReference(localApplication.getApplicationContext());
      ᐝ = true;
      ˎ = autoTrackGMAInterstitials;
      a.ˊ(localApplication);
      t.ˋ().ॱ(paramMoatOptions);
      if (!disableAdIdCollection) {
        p.ˊ(localApplication);
      }
      b.ˎ("[SUCCESS] ", "Moat Analytics SDK Version 2.4.0 started");
    }
    catch (Exception localException)
    {
      o.ॱ(
        localException;
    }
  }
  
  public final void start(Application paramApplication) {
    start(new MoatOptions(), paramApplication);
  }
  
  @UiThread
  public final void prepareNativeDisplayTracking(String paramString)
  {
    ʼ = paramString;
    if (ˋˋ == t.c.ˊ) {
      return;
    }
    try {
      ˋ(); return;
    } catch (Exception localException) {
      o.ॱ(
        localException;
    }
  }
  























  @UiThread
  private void ˋ()
  {
    if (ˊ == null) {
      ˊ = new b(a.ˎ(), b.a.ˏ);
      ˊ.ˋ(ʼ);
      b.ˏ(3, "Analytics", this, "Preparing native display tracking with partner code " + ʼ);
      b.ˎ("[SUCCESS] ", "Prepared for native display tracking with partner code " + ʼ);
    }
  }
  
  final boolean ˊ() {
    return ᐝ;
  }
  
  final boolean ˏ() {
    return (ˊॱ != null) && (ˊॱ.disableLocationServices);
  }
  
  public final void ॱ()
    throws o
  {
    o.ˊ();
    k.ˎ();
    if (ʼ != null) {
      try {
        ˋ(); return;
      } catch (Exception localException) {
        o.ॱ(
          localException;
      }
    }
  }
}
