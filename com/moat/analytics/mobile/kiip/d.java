package com.moat.analytics.mobile.kiip;

import android.os.Handler;
import android.support.annotation.CallSuper;
import android.text.TextUtils;
import android.view.View;
import android.webkit.WebView;
import java.lang.ref.WeakReference;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.json.JSONObject;


























abstract class d
  extends c
{
  static final MoatAdEventType[] ʽ = { MoatAdEventType.AD_EVT_FIRST_QUARTILE, MoatAdEventType.AD_EVT_MID_POINT, MoatAdEventType.AD_EVT_THIRD_QUARTILE };
  
  final Map<MoatAdEventType, Integer> ʻ;
  
  private final Set<MoatAdEventType> ॱˋ;
  
  private VideoTrackerListener ॱˊ;
  
  private boolean ͺ;
  
  private Double ˋॱ;
  
  final Handler ˊॱ;
  
  private Map<String, String> ˏॱ;
  
  WeakReference<View> ʼ;
  
  private final b ᐝॱ;
  
  private final String ॱˎ;
  
  d(String paramString)
  {
    super(null, false, true);
    b.ˏ(3, "BaseVideoTracker", this, "Initializing.");
    
    ॱˎ = paramString;
    ᐝॱ = new b(a.ˎ(), b.a.ˎ);
    















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    ˏ = ᐝॱ.ˋ;
    try
    {
      super.ˋ(ᐝॱ.ˏ);
    } catch (o paramString) {
      ˋ = paramString;
    }
    
    ʻ = new HashMap();
    ॱˋ = new HashSet();
    ˊॱ = new Handler();
    ͺ = false;
    ˋॱ = Double.valueOf(1.0D);
  }
  
  public void setVideoListener(VideoTrackerListener paramVideoTrackerListener)
  {
    ॱˊ = paramVideoTrackerListener;
  }
  
  public void removeVideoListener() {
    ॱˊ = null;
  }
  
  @CallSuper
  public boolean ˋ(Map<String, String> paramMap, View paramView) {
    try {
      ˋ();
      ˏ();
      if (paramView == null)
      {

        b.ˏ(3, "BaseVideoTracker", this, "trackVideoAd received null video view instance");
      }
      
      ˏॱ = paramMap;
      ʼ = new WeakReference(paramView);
      
      ˎ();
      
      paramMap = String.format("trackVideoAd tracking ids: %s | view: %s", new Object[] {new JSONObject(paramMap)
        .toString(), 
        b.ॱ(paramView) });
      b.ˏ(3, "BaseVideoTracker", this, paramMap);
      b.ˎ("[SUCCESS] ", ˊ() + " " + paramMap);
      if (ˊ != null) {
        ˊ.onTrackingStarted(ʽ());
      }
      return true;
    } catch (Exception paramMap) {
      ॱ("trackVideoAd", paramMap);
    }
    return false;
  }
  
  public void setPlayerVolume(Double paramDouble) {
    Double localDouble = 
    































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      Double.valueOf(
      


      ˋॱ.doubleValue() * p.ॱ());
    if (!paramDouble.equals(ˋॱ)) {
      b.ˏ(3, "BaseVideoTracker", this, String.format(Locale.ROOT, "player volume changed to %f ", new Object[] { paramDouble }));
      ˋॱ = paramDouble;
      if (!localDouble.equals(
      



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        Double.valueOf(
        


        ˋॱ.doubleValue() * p.ॱ()))) {
        dispatchEvent(new MoatAdEvent(MoatAdEventType.AD_EVT_VOLUME_CHANGE, MoatAdEvent.ˏ, ˋॱ));
      }
    }
  }
  
  public void changeTargetView(View paramView) {
    b.ˏ(3, "BaseVideoTracker", this, "changing view to " + b.ॱ(paramView));
    ʼ = new WeakReference(paramView);
    try {
      super.changeTargetView(paramView); return;
    } catch (Exception localException) {
      o.ॱ(
        localException;
    }
  }
  
  void ˏ(List<String> paramList) throws o {
    if (ˏॱ == null) {
      paramList.add("Null adIds object");
    }
    if (!paramList.isEmpty()) {
      paramList = TextUtils.join(" and ", paramList);
      throw new o(paramList);
    }
    super.ˏ(paramList);
  }
  
  public void stopTracking()
  {
    try {
      super.stopTracking();
      ॱˋ();
      if (ॱˊ != null)
        ॱˊ = null;
      return;
    } catch (Exception localException) {
      o.ॱ(
        localException;
    }
  }
  
  public void dispatchEvent(MoatAdEvent paramMoatAdEvent) {
    try { Object localObject1 = paramMoatAdEvent;
      






















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      paramMoatAdEvent = this;Object localObject2 = ˋ((MoatAdEvent)localObject1);
      b.ˏ(3, "BaseVideoTracker", paramMoatAdEvent, String.format("Received event: %s", new Object[] { ((JSONObject)localObject2).toString() }));
      b.ˎ("[SUCCESS] ", paramMoatAdEvent.ˊ() + String.format(" Received event: %s", new Object[] { ((JSONObject)localObject2).toString() }));
      if ((paramMoatAdEvent.ॱ()) && 
        (ˏ != null)) {
        ˏ.ˊ(ᐝॱ.ˊ, (JSONObject)localObject2);
        if (!ॱˋ.contains(ॱ)) {
          ॱˋ.add(ॱ);
          if (ॱˊ != null) {
            ॱˊ.onVideoEventReported(ॱ);
          }
        }
      }
      


      if (
      



























        (((localObject2 = localObject1 = ॱ) == MoatAdEventType.AD_EVT_COMPLETE) || (localObject2 == MoatAdEventType.AD_EVT_STOPPED) || (localObject2 == MoatAdEventType.AD_EVT_SKIPPED) ? 1 : 0) != 0)
      {
        ʻ.put(localObject1, Integer.valueOf(1));
        if (ˏ != null) ˏ.ˏ(paramMoatAdEvent);
        paramMoatAdEvent.ॱˋ();
      }
    }
    catch (Exception localException)
    {
      o.ॱ(
        localException;
    }
  }
  
  abstract Map<String, Object> ˊॱ() throws o;
  
  final Double ᐝ() {
    return Double.valueOf(
    


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      ˋॱ.doubleValue() * p.ॱ());
  }
  
  final Double ˏॱ() {
    return ˋॱ;
  }
  
  final void ˎ() throws o
  {
    super.changeTargetView((View)ʼ.get());
    super.ˎ();
    

    Integer localInteger1 = (Integer)(localObject = ˊॱ()).get("width");
    Integer localInteger2 = (Integer)((Map)localObject).get("height");
    Object localObject = (Integer)((Map)localObject).get("duration");
    
    b.ˏ(3, "BaseVideoTracker", this, String.format(Locale.ROOT, "Player metadata: height = %d, width = %d, duration = %d", new Object[] { localInteger2, localInteger1, localObject }));
    
    ᐝॱ.ˎ(ॱˎ, ˏॱ, localInteger1, localInteger2, (Integer)localObject);
  }
  
  JSONObject ˋ(MoatAdEvent paramMoatAdEvent) {
    if (Double.isNaN(ˎ.doubleValue())) {
      ˎ = ˋॱ;
    }
    return new JSONObject(paramMoatAdEvent.ॱ());
  }
  























  final void ॱˋ()
  {
    if (!ͺ) {
      ͺ = true;
      Runnable local4 = new Runnable()
      {
        public final void run() {
          try {
            b.ˏ(3, "BaseVideoTracker", this, "Shutting down.");
            b localB = d.ˎ(d.this);
            











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































            b.ˏ(3, "GlobalWebView", localB, "Cleaning up");
            ˋ.ˊ();
            ˋ = null;
            ˏ.destroy();
            ˏ = null;d.ˋ(d.this); return;
          } catch (Exception localException) {
            o.ॱ(
              localException;
          }
          
        }
      };
      ˊॱ.postDelayed(local4, 500L);
    }
  }
  







  final boolean ͺ()
  {
    return (ʻ.containsKey(MoatAdEventType.AD_EVT_COMPLETE)) || (ʻ.containsKey(MoatAdEventType.AD_EVT_STOPPED)) || (ʻ.containsKey(MoatAdEventType.AD_EVT_SKIPPED));
  }
  
  static boolean ˋ(Integer paramInteger1, Integer paramInteger2) {
    paramInteger1 = Math.abs(paramInteger2.intValue() - paramInteger1.intValue());
    double d = Math.min(750.0D, paramInteger2.intValue() * 0.05D);
    return paramInteger1 <= d;
  }
}
