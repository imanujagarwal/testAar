package com.moat.analytics.mobile.kiip;

import android.os.Build.VERSION;
import android.util.Base64;
import android.util.Log;
import java.net.URLEncoder;
import java.util.Locale;















final class o
  extends Exception
{
  private static final Long ˏ = Long.valueOf(60000L);
  private static Long ˎ;
  private static Exception ˋ = null;
  
  o(String paramString) {
    super(paramString);
  }
  
  static String ॱ(String paramString, Exception paramException) {
    if ((paramException instanceof o)) {
      return paramString + " failed: " + paramException.getMessage();
    }
    

    return paramString + " failed unexpectedly";
  }
  
  static void ॱ(Exception paramException)
  {
    if (ˋˎ) {
      Log.e("MoatException", Log.getStackTraceString(paramException));return;
    }
    
    ˊ(paramException);
  }
  
  private static void ˊ(Exception paramException)
  {
    try {
      if (ˋˋ == t.c.ॱ) {
        int i;
        if ((i = ˋˊ) == 0) return;
        if ((i < 100) && (i / 100.0D < Math.random())) { return;
        }
        String str2 = "";
        String str3 = "";
        String str4 = "";
        String str5 = "";
        
        Object localObject = "https://px.moatads.com/pixel.gif?e=0&i=MOATSDK1&ac=1";
        (
          localObject = new StringBuilder((String)localObject)).append("&zt=" + ((paramException instanceof o) ? 1 : 0));
        ((StringBuilder)localObject).append("&zr=" + i);
        try {
          ((StringBuilder)localObject).append("&zm=" + (paramException.getMessage() == null ? "null" : URLEncoder.encode(Base64.encodeToString(paramException.getMessage().getBytes("UTF-8"), 0), "UTF-8")));
          
          ((StringBuilder)localObject).append("&k=" + URLEncoder.encode(Base64.encodeToString(Log.getStackTraceString(paramException).getBytes("UTF-8"), 0), "UTF-8"));
        } catch (Exception localException1) {}
        try {
          str2 = "KIIP";
          ((StringBuilder)localObject).append("&zMoatMMAKv=2bc3418b93f01686fcbd1ebebcc04694651821b2");
          str4 = "2.4.0";
          paramException = p.ˎ();
          ((StringBuilder)localObject).append("&zMoatMMAKan=" + paramException.ˏ());
          str3 = paramException.ˋ();
          str5 = Integer.toString(Build.VERSION.SDK_INT);
        } catch (Exception localException2) {}
        ((StringBuilder)localObject).append("&d=Android:" + str2 + ":" + str3 + ":-");
        ((StringBuilder)localObject).append("&bo=" + str4);
        ((StringBuilder)localObject).append("&bd=" + str5);
        paramException = Long.valueOf(System.currentTimeMillis());
        ((StringBuilder)localObject).append("&t=" + paramException);
        ((StringBuilder)localObject).append("&de=" + String.format(Locale.ROOT, "%.0f", new Object[] { Double.valueOf(Math.floor(Math.random() * Math.pow(10.0D, 12.0D))) }));
        
        ((StringBuilder)localObject).append("&cs=0");
        if ((ˎ == null) || (paramException.longValue() - ˎ.longValue() > ˏ.longValue())) {
          String str1 = ((StringBuilder)localObject).toString();
          





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































          new l.1(str1)
          




            .start();ˎ = paramException;
        }
        return;
      }
      ˋ = paramException;
      
      return;
    } catch (Exception localException3) {}
  }
  
  static void ˊ() { if (ˋ != null) {
      ˊ(ˋ);
      ˋ = null;
    }
  }
}
