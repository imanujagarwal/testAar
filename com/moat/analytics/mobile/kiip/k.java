package com.moat.analytics.mobile.kiip;

import android.app.Application;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.Looper;
import android.support.annotation.Nullable;
import android.support.v4.content.ContextCompat;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;




























final class k
  implements LocationListener
{
  private static k ˏ = null;
  
  private ScheduledExecutorService ॱ;
  
  private ScheduledFuture<?> ˊ;
  
  private ScheduledFuture<?> ˋ;
  
  private LocationManager ˎ;
  private boolean ᐝ;
  private Location ʽ;
  private boolean ʼ;
  
  static k ˎ()
  {
    if (ˏ == null) {
      ˏ = new k();
    }
    return ˏ;
  }
  
  private k() {
    try {
      ᐝ = getInstanceˏ;
      
      if (ᐝ) {
        b.ˏ(3, "LocationManager", this, "Moat location services disabled");return;
      }
      ॱ = Executors.newScheduledThreadPool(1);
      Application localApplication = a.ˎ();
      ˎ = ((LocationManager)localApplication.getSystemService("location"));
      if (ˎ.getAllProviders().size() == 0) {
        b.ˏ(3, "LocationManager", this, "Device has no location providers");return;
      }
      ˏ(); return;
    }
    catch (Exception localException)
    {
      o.ॱ(
        localException;
    } }
  
  @Nullable
  final Location ॱ() { if ((ᐝ) || (ˎ == null)) {
      return null;
    }
    return ʽ;
  }
  
  final void ˋ()
  {
    ˏ();
  }
  
  final void ˊ() {
    ˋ(false);
  }
  

  public final void onLocationChanged(Location paramLocation)
  {
    try
    {
      b.ˏ(3, "LocationManager", this, "Received an updated location = " + paramLocation.toString());
      Location localLocation = paramLocation;float f = 
      





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        (float)((System.currentTimeMillis() - localLocation.getTime()) / 1000L);
      if ((paramLocation.hasAccuracy()) && (paramLocation.getAccuracy() <= 100.0F) && (f < 600.0F))
      {
        ʽ = ˊ(ʽ, paramLocation);
        b.ˏ(3, "LocationManager", this, "fetchCompleted");
        ˋ(true);
      }
      return;
    } catch (Exception localException) { o.ॱ(
        localException;
    }
  }
  

  public final void onStatusChanged(String paramString, int paramInt, Bundle paramBundle) {}
  
  public final void onProviderEnabled(String paramString) {}
  
  public final void onProviderDisabled(String paramString) {}
  
  private void ˏ()
  {
    try
    {
      if ((ᐝ) || (ˎ == null)) {
        return;
      }
      if (ʼ) {
        b.ˏ(3, "LocationManager", this, "already updating location");
      }
      
      b.ˏ(3, "LocationManager", this, "starting location fetch");
      
      ʽ = ˊ(ʽ, ʻ());
      if (ʽ != null) {
        b.ˏ(3, "LocationManager", this, "Have a valid location, won't fetch = " + ʽ.toString());
        ˏॱ();
        return;
      }
      
      ᐝ(); return;
    }
    catch (Exception localException) {
      o.ॱ(
        localException;
    }
  }
  
  private void ˋ(boolean paramBoolean) {
    try { b.ˏ(3, "LocationManager", this, "stopping location fetch");
      ʽ();
      ˊॱ();
      if (paramBoolean) {
        ˏॱ();return;
      }
      
      ʼ(); return;
    }
    catch (Exception localException) {
      o.ॱ(
        localException;
    }
  }
  
  private Location ʻ() {
    Location localLocation = null;
    try {
      boolean bool1 = ˋॱ();
      boolean bool2 = ॱˋ();
      if ((bool1) && (bool2)) {
        localLocation = ˊ(ˎ
          .getLastKnownLocation("gps"), ˎ
          .getLastKnownLocation("network"));
      }
      else if (bool1) {
        localLocation = ˎ.getLastKnownLocation("gps");
      }
      else if (bool2) {
        localLocation = ˎ.getLastKnownLocation("network");
      }
    }
    catch (SecurityException localSecurityException) {
      o.ॱ(
        localSecurityException; }
    return localLocation;
  }
  
  private void ᐝ()
  {
    try {
      if (!ʼ) {
        b.ˏ(3, "LocationManager", this, "Attempting to start update");
        if (ˋॱ()) {
          b.ˏ(3, "LocationManager", this, "start updating gps location");
          ˎ
            .requestLocationUpdates("gps", 0L, 0.0F, this, 
            Looper.getMainLooper());
          ʼ = true;
        }
        if (ॱˋ()) {
          b.ˏ(3, "LocationManager", this, "start updating network location");
          ˎ
            .requestLocationUpdates("network", 0L, 0.0F, this, 
            Looper.getMainLooper());
          ʼ = true;
        }
        if (ʼ)
        {

          ˊॱ();
          ˋ = ॱ.schedule(new Runnable() {
            public final void run() {
              try {
                b.ˏ(3, "LocationManager", this, "fetchTimedOut");
                k.ॱ(k.this); return;
              } catch (Exception localException) {
                o.ॱ(
                  localException; } } }, 60L, TimeUnit.SECONDS);
        }
      }
      return;
    }
    catch (SecurityException localSecurityException) {
      o.ॱ(
        localSecurityException;
    }
  }
  
  private void ʽ() {
    try {
      b.ˏ(3, "LocationManager", this, "Stopping to update location");
      
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      String str = "android.permission.ACCESS_FINE_LOCATION"; if (
      


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        (ContextCompat.checkSelfPermission(a.ˎ().getApplicationContext(), str) == 0 ? 1 : 0) == 0) {
        str = "android.permission.ACCESS_COARSE_LOCATION";
      }
      if (
      
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        (
        









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        (ContextCompat.checkSelfPermission(a.ˎ().getApplicationContext(), str) == 0 ? 1 : 0) != 0 ? 1 : 0) != 0)
        if (ˎ != null) {
          ˎ.removeUpdates(this);
          ʼ = false;
        }
      return;
    } catch (SecurityException localSecurityException) {
      o.ॱ(
        localSecurityException;
    }
  }
  
  private void ˊॱ() { if ((ˋ != null) && (!ˋ.isCancelled())) {
      ˋ.cancel(true);
      ˋ = null;
    }
  }
  
  private void ʼ() {
    if ((ˊ != null) && (!ˊ.isCancelled())) {
      ˊ.cancel(true);
      ˊ = null;
    }
  }
  
  private void ˏॱ() {
    b.ˏ(3, "LocationManager", this, "Resetting fetch timer");
    ʼ();
    float f1 = 600.0F;
    float f2; if (ʽ != null) {
      Location localLocation = ʽ;float f3 = 
      













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        (float)((System.currentTimeMillis() - localLocation.getTime()) / 1000L);f2 = Math.max(600.0F - f3, 0.0F);
    }
    long l = f2;
    
    ˊ = ॱ.schedule(new Runnable() {
      public final void run() {
        try {
          b.ˏ(3, "LocationManager", this, "fetchTimerCompleted");
          k.ˊ(k.this); return;
        } catch (Exception localException) {
          o.ॱ(
            localException; } } }, l, TimeUnit.SECONDS);
  }
  


  private boolean ˋॱ()
  {
    String str = "android.permission.ACCESS_FINE_LOCATION"; if (
    



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      (ContextCompat.checkSelfPermission(a.ˎ().getApplicationContext(), str) == 0 ? 1 : 0) != 0)
      if ((ˎ.getProvider("gps") != null) && 
        (ˎ.isProviderEnabled("gps"))) return true; return false;
  }
  


















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































  private boolean ॱˋ()
  {
    String str = "android.permission.ACCESS_FINE_LOCATION"; if (
    


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      (ContextCompat.checkSelfPermission(a.ˎ().getApplicationContext(), str) == 0 ? 1 : 0) == 0) {
      str = "android.permission.ACCESS_COARSE_LOCATION";
    }
    if (
    


















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      (
      









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      (ContextCompat.checkSelfPermission(a.ˎ().getApplicationContext(), str) == 0 ? 1 : 0) != 0 ? 1 : 0) != 0)
      if ((ˎ.getProvider("network") != null) && 
        (ˎ.isProviderEnabled("network"))) return true; return false;
  }
  









  private static Location ˊ(Location paramLocation1, Location paramLocation2)
  {
    boolean bool1 = ˋ(paramLocation1);
    boolean bool2 = ˋ(paramLocation2);
    if (!bool1) {
      if (!bool2) {
        return null;
      }
      
      return paramLocation2;
    }
    
    if (!bool2) {
      return paramLocation1;
    }
    
    if (paramLocation1.getAccuracy() < paramLocation1.getAccuracy()) return paramLocation1; return paramLocation2;
  }
  

  private static boolean ˋ(Location paramLocation)
  {
    boolean bool = true;
    
    if (paramLocation == null) {
      bool = false;
    }
    else if ((paramLocation.getLatitude() == 0.0D) && (paramLocation.getLongitude() == 0.0D)) {
      bool = false;
    }
    else if (paramLocation.getAccuracy() < 0.0F) {
      bool = false;
    }
    else if (
    





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      (float)((System.currentTimeMillis() - paramLocation.getTime()) / 1000L) >= 600.0F) {
      bool = false;
    }
    return bool;
  }
  



  static boolean ˎ(Location paramLocation1, Location paramLocation2)
  {
    if (paramLocation1 == paramLocation2) {
      return true;
    }
    if ((paramLocation1 != null) && (paramLocation2 != null) && (paramLocation1.getTime() == paramLocation2.getTime())) {
      return true;
    }
    return false;
  }
}
